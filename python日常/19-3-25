python数据抓取工作中对http的知识点：

http状态码
１００：继续客户端当继续发送请求

１０２：继续处理

２０１：表示服务器在请求的响应中建立了新文档，应在定位头信息中给出他的url

２０２：请求被接受，但处理未完成

函数是对代码和功能的封装，本质上是人们为了提升编程效率的一种抽象，与计算机执行及速度无关

python3中的数据类型分为可变与不可变类型，函数的传入参数也是一样。如果传入的参数类型是可变类型，如果在函数体中不被改变，则原参数也会被改变，所以

参数的值是否被改变，与函数中对变量的操作有关，也和参数类型有关

参数是列表类型时，改变原参数的值

参数是组合类型（可变对象）时，改变原参数的值

参数是整数类型时，不改变原参数的值

python Requests库提供的方法：

.get()和.post()用于不同方式请求网络资源

.head()方法用于查看返回头部信息

.push()不是Requests提供的方法

解释型语言的程序代码由相应语言的解释器“翻译”成目标代码（机器语言）后执行，因此效率比较低，而且不能生成可独立执行的可执行文件，应用程序不能脱离其解释器而运行

如果导入的模块名和已经有对象名重复了，可以使用as 关键字进行避免

对Stackless Python的了解：

Stackless 并非以库的形式和python整合，Stackless 提供的并发建模工具，比目前其他大多数传统编程语言所提供的工具都更加易用；不仅用于python自身，也包括Java,C++,以及其他语言。

Stackless Python 的说法：

python的一个增强版本

提供并发式编程的模式

为python添加微线程扩展

但它不是python中重要的多线程模块

python中，关键字raise可以定义一条异常，引发异常，一旦执行了raise语句，raise后面的语句将不能执行

如果想要在python中使用持久字典，应导入模块：
import dbm

dbm是python提供的数据库管理库，可满足对键值对持久化的需求

OrderedDict:有序字典

namedtuple:创建一个只读的对象，拥有可以被访问的属性

defaultdict:较于普通字典对象可以指定key对应的value类型，并总有默认value对应key

{}.fromkeys((1,2),3),返回

｛１：３，２：３｝

fromkeys是字典对象提供的方法，用于创建一新字典，以第一个参数中的元素做字典的键，第二个参数为字典所有键对应的初始值

lambda函数的掌握：
a = lambda *x:x ;a(7,'月')会返回(7,'月')

lambda函数在定义时参数前有*，表明能接收不定长个定位参数，并以元组形式返回

’bhafhnflhff‘[0:4]该表达使用了python对序列访问特性：Slicing特性（切片）

s1='%s',s1%(s1)的输出是：%s
python单双引号在使用上没有区别

用户自定义类时，如果想让该类实例对象倍print调用时返回类的特性信息，就必须实现python魔术方法中的__str__

__init__使用初始化对象时触发

__cmp__用于对象的比较时触发

__rep__和__str__这两个方法都是用于显示的，当我们想在不同环境下支持不同的显示，例如终端用户显示使用__str__，实际上__str__只是覆盖了__rep__以得到更友好的用户显示

python中BIF exec的掌握，exec意为执行，即执行一个声明。

python中的语句分为表达式与声明，声明statement是对变量进行赋值，函数，类的定义等操作一般不返回信息。

而表达式Expression则是对执行某具体代码，对象求值的操作，一般会返回信息。

exec主要用于是执行字符串中的python声明（所以没有任何返回）

由上也可得，lambda函数为匿名函数，接受一个或多个参数

map是python的一个高阶函数，负责将一个可迭代对象中的每个元素一个一个映射给负责处理的函数

列表初始化字典对象：For example:     dict([['one',1],['two',2]])

一个列表对象包含的每个列表对象为新字典对象的item，每个元素的第０，１个元素分别对应item为key，value

标准Python风格是每个缩进级别是使用４个空格，不要使用Tab制表符，Python的代码原则是代码只包含空格

（尽管日常使用的比较多的是Tab，但python的标准风格不要搞错）
在python中，只有模块(module)，类(class)，以及函数(def lambda)才会引入新的作用域

python的变量名解析机制也称为LEGB法则:

L:(Local)本地作用域

E:(Enclosing locals)当前作用域被嵌入的本地作用域

G:(Global)全局/模块作用域

B:(Built-in)内置作用域

适宜用于异常捕获：try……catch     assert     with

不适宜用于异常捕获：if elif（用于逻辑判断）

从访问权限的角度来看，类中方法默认都是公有方法

type(__builtins__)返回<class 'module'>
因为__buildins__是python内置模块

经典题：

关于python标识符命名规范的：
list=[1,2,3]
list.append(4)+list('abc')
list在python是内置函数，用以进行初始化列表或进行强制转换，而题目一开始便定义了一个list变量，这样就会使得对list函数的引用被替换，相应操作无法进行，所以程序异常。

字符串型对象可以通过索引或切片进行访问，但无法进行赋值
例如url = 'lafhvva.aj'
url[-3:-1] = '.com'     ＃这样操作就是不行的

pickle模块序列化对象：
将对象序列化保存到一个文件中，并将其从文件中恢复后，其属性值会恢复至当时序列他的状态，并会覆盖同名对象

经典题：
字典中key,可以使字符串，数字等不可变类型，他们都是hashable（可哈希）的。而字典，列表等可变类型是不能做key值的
所以如下例子：
boxes = {}
boxes['xxx'] = 1
len(crates[boxes])     #句中的crates[boxes]的boxes为dict类型，所以异常报错。
